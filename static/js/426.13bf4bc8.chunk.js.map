{"version":3,"file":"static/js/426.13bf4bc8.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.js","components/ContactList/ContactList.jsx","components/ContactListItem/ContactListItem.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  font-size: 16px;\n  text-transform: capitalize;\n  padding: 5px 15px;\n  margin-right: 10px;\n  border: 1px solid #e5e5e5;\n  background-color: transparent;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\nexport const Label = styled.label`\n  display: block;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin: 5px 0 15px 0;\n`;\n\nexport const Form = styled.form`\n  width: 400px;\n  padding: 10px;\n  border: 1px solid #000;\n`;\n","import { addContact } from 'redux/operations';\nimport { Button, Form, Input, Label } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const duplicatedContact = contacts.items.find(\n      contact =>\n        contact.name.toLowerCase() ===\n        e.target.elements.name.value.toLowerCase()\n    );\n\n    if (duplicatedContact) {\n      return alert(`${duplicatedContact.name} is already in contacts`);\n    }\n\n    const newContact = {\n      name: e.target.elements.name.value,\n      number: e.target.elements.number.value,\n    };\n\n    dispatch(addContact(newContact));\n\n    e.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"name\">\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label htmlFor=\"number\">\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          id=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button\n        type=\"submit\"\n        disabled={contacts.isAdding}\n        onMouseDown={e => (e.target.style.backgroundColor = '#3e7fe9')}\n        onMouseUp={e => (e.target.style.backgroundColor = 'transparent')}\n      >\n        {contacts.isAdding ? 'Adding...' : 'Add contact'}\n      </Button>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Li = styled.li`\n  margin-bottom: 15px;\n  font-size: 20px;\n`;\n\nexport const Span = styled.span`\n  margin-right: 20px;\n`;\n","import { ContactListItem } from 'components';\nimport { Li } from '../ContactListItem/ContactListItem.styled';\nimport { useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/selectors';\n\nconst getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  return (\n    <ul>\n      {contacts.isLoading && <div>Loading...</div>}\n      {contacts.error && (\n        <div>Something went wrong. Error message: {contacts.error}</div>\n      )}\n      {visibleContacts.map(contact => (\n        <Li key={contact.id}>\n          <ContactListItem contact={contact} />\n        </Li>\n      ))}\n    </ul>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { Button } from 'components/ContactForm/ContactForm.styled';\nimport { Span } from './ContactListItem.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { getContacts } from 'redux/selectors';\n\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  return (\n    <>\n      <Span>\n        {contact.name}: {contact.number}\n      </Span>\n      <Button\n        type=\"button\"\n        onClick={handleDelete}\n        disabled={contacts.isDeleting}\n        onMouseDown={e => (e.target.style.backgroundColor = '#3e7fe9')}\n        onMouseUp={e => (e.target.style.backgroundColor = 'transparent')}\n      >\n        {contacts.isDeleting ? 'Deleting...' : 'Delete'}\n      </Button>\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n","import { Input, Label } from 'components/ContactForm/ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Label htmlFor=\"search\">\n      Find contacts by name\n      <Input type=\"text\" id=\"search\" onChange={handleChange} />\n    </Label>\n  );\n};\n","import { ContactForm, ContactList, Filter } from 'components';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Button","styled","Label","Input","Form","ContactForm","dispatch","useDispatch","contacts","useSelector","getContacts","onSubmit","e","preventDefault","duplicatedContact","items","find","contact","name","toLowerCase","target","elements","value","alert","newContact","number","addContact","reset","htmlFor","type","id","pattern","title","required","disabled","isAdding","onMouseDown","style","backgroundColor","onMouseUp","Li","Span","ContactList","visibleContacts","filter","normalizedFilter","includes","getVisibleContacts","getFilter","isLoading","error","map","ContactListItem","onClick","deleteContact","isDeleting","Filter","onChange","setFilter","useEffect","fetchContacts"],"sourceRoot":""}